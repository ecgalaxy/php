---
- name: Set fact OCI8 version
  ansible.builtin.set_fact:
    php_oci8_version: "oci8-2.2.0"
  when: php_version[0] == "7"

- name: Set fact OCI8 version
  ansible.builtin.set_fact:
    php_oci8_version: "oci8-3.0.1"
  when: php_version[:3] == "8.0"

- name: Set fact OCI8 version
  ansible.builtin.set_fact:
    php_oci8_version: "oci8-3.2.1"
  when: php_version[:3] == "8.1"

- name: Set fact OCI8 version
  ansible.builtin.set_fact:
    php_oci8_version: "oci8-3.3.0"
  when: php_version[:3] == "8.2" or php_version[:3] == "8.3"

- name: Register PHP extension directory
  ansible.builtin.command: "php-config{{ php_version }} --extension-dir"
  register: php_extension_dir
  changed_when: false

- name: Check shared object file
  ansible.builtin.stat:
    path: "{{ php_extension_dir.stdout }}/oci8.so"
  register: php_oci8_so_file

- name: Install OCI8 extension
  when: not php_oci8_so_file.stat.exists
  become: true
  block:
    - name: Install OCI8 extension with pecl
      ansible.builtin.shell: "set -o pipefail && printf 'instantclient,{{ php_oracle_instantclient_path }}' | pecl -d php_suffix={{ php_version }} install {{ php_oci8_version }}"
      args:
        executable: /bin/bash
      register: pecl_result
      changed_when: "'install ok' in pecl_result.stdout"
      failed_when: "'install ok' not in pecl_result.stdout"

    - name: Unregister OCI8 extension
      ansible.builtin.shell: "set -o pipefail && pecl uninstall -r oci8"
      args:
        executable: /bin/bash
      register: pecl_result
      changed_when: "'uninstall ok' in pecl_result.stdout"
      failed_when: "'uninstall ok' not in pecl_result.stdout"

    - name: Copy OCI8 ini file
      ansible.builtin.copy:
        src: oci8.ini
        dest: "{{ php_oci8_extension_ini_path }}"
        owner: root
        group: root
        mode: 'u=rw,go=r'

    - name: Enable OCI8 module - CLI
      ansible.builtin.command: "phpenmod oci8"
      register: cmd_result
      changed_when: "cmd_result.rc == 0"
      failed_when: "cmd_result.rc != 0"

- name: Check libaio library
  ansible.builtin.stat:
    path: /usr/lib/x86_64-linux-gnu/libaio.so.1
  register: libaio_so_file

- name: Create libaio.so.1 symlink (Ubuntu 24.04)
  ansible.builtin.file:
    src: /usr/lib/x86_64-linux-gnu/libaio.so.1t64
    dest: /usr/lib/x86_64-linux-gnu/libaio.so.1
    owner: "root"
    group: "root"
    mode: "u=rw,go=r"
    state: link
  become: true
  when: not libaio_so_file.stat.exists
